generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Build {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(150)
  description String?
  race        Race         @default(NULL)
  v_race      Race         @default(NULL)
  user_id     Int
  is_public   Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  build_step  Build_step[]
  user        User         @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("builds")
}

model Build_step {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(150)
  population  Int
  timer       Int
  position    Int
  build_id    Int
  build       Build  @relation(fields: [build_id], references: [id], onDelete: Cascade)

  @@map("build_steps")
}

model User {
  id               Int       @id @default(autoincrement())
  first_name       String?
  last_name        String?
  username         String
  email            String    @unique
  password         String
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  role             Role      @default(GUEST)
  refresh_token    String?
  access_token     String?
  token_expires_at DateTime?
  id_token         Int?

  build Build[]

  @@map("users")
}

enum Role {
  GUEST
  USER
  ADMIN
}

enum Race {
  ZERG
  TERRAN
  PROTOSS
  NULL
  ALL
}
