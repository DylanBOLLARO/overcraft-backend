generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GUEST
  MEMBER
  ADMIN
}

enum Race {
  ZERG
  TERRAN
  PROTOSS
  NULL
  ALL
}

enum StepVariants {
  BUILDING
  UNIT
  GAZ
  INFO
  SUPPLY
  ATTACK
  UPGRADE
}

model Builds {
  id          String   @id @unique @default(uuid())
  name        String
  description String?
  slug        String?
  race        Race
  v_race      Race
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  is_public   Boolean  @default(false)
  featured    Boolean  @default(false)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  steps     Step[]
  favorites Favorites[]

  @@map("builds")
}

model Favorites {
  id      String @id @unique @default(uuid())
  buildId String
  userId  String

  builds Builds @relation(fields: [buildId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("favorites")
}

model Step {
  id          String       @id @unique @default(uuid())
  description String       @db.VarChar(150)
  population  Int
  timer       Int
  position    Int
  variant     StepVariants @default(INFO)
  buildId     String
  builds      Builds       @relation(fields: [buildId], references: [id], onDelete: Cascade)

  @@map("steps")
}

model User {
  id                 String   @unique
  email              String   @unique
  family_name        String?
  given_name         String?
  name               String?
  preferred_username String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt

  builds    Builds[]
  favorites Favorites[]

  @@map("users")
}
